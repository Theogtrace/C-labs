Script started on Wed 07 Mar 2018 09:02:36 PM EST
[?1034hbash-4.1$ uname -a
Linux Zeus-2 2.6.32-696.18.7.el6.centos.plus.x86_64 #1 SMP Tue Jan 9 14:11:50 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
bash-4.1$ ls
lab6_bad.txt  lab6_sarshad4_208.c  lab6Typescript_sarshad4_208	Makefile
bash-4.1$ cd[Kat lab6_sarshad4_208.c 
/* Saad Arshad G#00857432
 * CS 262 , 208
 * lab6
 *
*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#define BSIZE 1000
#define CSIZE 20


int main()
{
	char Buffer[BSIZE];
	char Line[BSIZE];
	char Filein[BSIZE];
	char Fileout[BSIZE];

	FILE *infile = NULL;
	FILE *outfile = NULL;
	char *token = NULL;	
	char s[CSIZE] = " ";
	int x = 0;
	int count;

	char A[BSIZE];
	char B[BSIZE];
// Initializing the Arrays that the words will be stored to		
	A[0] = '\0';
	B[0] = '\0';
	Line[0] = '\0';
// asking user to input the file that will be read
	printf("What file do you want to open?\n");
	fgets(Buffer, BSIZE, stdin);
	sscanf(Buffer, "%s", Filein);

	infile = fopen(Filein,"r");	
// always check if the file was opened
	if(infile == NULL)
	{
		printf("Error opening file \n");
		exit(1);
	}
	
	printf("What file do you want to write to?\n");
	fgets(Buffer, BSIZE, stdin);
	sscanf(Buffer, "%s", Fileout);

	outfile = fopen(Fileout, "w");

	if(outfile == NULL)
	{
		printf("Error opening file\n");	
		exit(1);
	}
	
// reads each of the line from the pharagram and puts in Line array
	while(fgets(Line, BSIZE, infile))
	{
		
		printf("%s\n", Line);
		printf("What word do you want to get rid off?\n");
		fgets(Buffer, BSIZE, stdin);
		sscanf(Buffer, "%d", &x);
		
// uses strtok to separate each word in the Line array of each sentance
		token = strtok(Line,s);
		count = 0;
		
		while(token != NULL)
		{	
// Count is just a counter variable that goes up each time and this if statement // uses strcat to add the token to a blank array A. also removes the \n 
			if(count != x || x <= 0)
			{
				strcat(A, token);
				if(token[strlen(token) -1] == '\n')
				{
					token[strlen(token)-1] = '\0';
				}
				else
				{
					strcat(A, " ");
				}	
			}
// if the count variable is the same as x which is the input of what ward the user wants to get rid off than it gets coppied to array B for the output file. 
			else if(count == x)
			{
				strcat(B, token);
				fprintf(outfile, "%s\n", B);
			}

			token = strtok(NULL,s);
			B[0] = '\0';
			count = count + 1;	
		}
		
	}

	printf("This is the new msg\n");
	printf("%s\n", A);

	fclose(infile);
	fclose(outfile);
	exit(0);
	
}



bash-4.1$ make
gcc -g -Wall -o lab6_sarshad4_208 lab6_sarshad4_208.c
bash-4.1$ ls
lab6_bad.txt	   lab6_sarshad4_208.c		Makefile
lab6_sarshad4_208  lab6Typescript_sarshad4_208
bash-4.1$ lab6_sarshad4_208 
What file do you want to open?
lab6_bad.txt
What file do you want to write to?
good.txt
You are to NARF! create a (very) simple word processor.

What word do you want to get rid off?
3
Your program will PINKY prompt the user to enter the name

What word do you want to get rid off?
3
of an input file BRAIN containing text ("Lab8_bad.txt").

What word do you want to get rid off?
3
It will then prompt you for the name TAKE of an output file.

What word do you want to get rid off?
3
Your program OVER will open the input file for reading,

What word do you want to get rid off?
3
and open the output file for THE writing. The program

What word do you want to get rid off?
3
will then read the input file, one line at a time.

What word do you want to get rid off?
3
After each line is WORLD! read, the line will be printed to the

What word do you want to get rid off?
3
screen and a TONIGHT prompt will appear.

What word do you want to get rid off?
3
This is the new msg
You are to create a (very) simple word processor.
Your program will prompt the user to enter the name
of an input BRAIN containing text ("Lab8_bad.txt").
It will then you for the name TAKE of an output file.
Your program OVER open the input file for reading,
and open the file for THE writing. The program
will then read input file, one line at a time.
After each line WORLD! read, the line will be printed to the
screen and a prompt will appear.

bash-4.1$ cat good.txt
NARF!
PINKY
file
prompt
will
output
the
is
TONIGHT
bash-4.1$ clea[K[K[K[Kmake clean
rm lab6_sarshad4_208
bash-4.1$ ls
good.txt      lab6_sarshad4_208.c	   Makefile
lab6_bad.txt  lab6Typescript_sarshad4_208
bash-4.1$ exit

Script done on Wed 07 Mar 2018 09:03:30 PM EST
